---

- name: set pin facts
  set_fact:
    _pin_package: elasticsearch
    _pin_version: "{{ elasticsearch_release }}"

# set our version of elasticsearch as the higher priority,
# A priority is used to select the package that will be installed. 
- name: set elasticsearch preferences file
  template:
    src: pin.pref.j2
    dest: "/etc/apt/preferences.d/elasticsearch.pref"
    owner: root
    group: root
    mode: 0644

- name: install elasticsearch packages
  apt:
    name: "{{ packages }}"
    state: latest
    dpkg_options: 'force-confnew,force-confdef'
    autoclean: yes
    autoremove: yes
    update_cache: yes
    cache_valid_time: 3600
  vars:
    packages:
    - elasticsearch

- name: update min heap size
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xms'
    line: "-Xms{{ elasticsearch_init_heap_size }}"

- name: update max heap size
  lineinfile:
    path: /etc/elasticsearch/jvm.options
    regexp: '^-Xmx'
    line: "-Xmx{{ elasticsearch_max_heap_size }}"

- name: set ulimit nofile
  lineinfile:
    path: /etc/security/limits.conf
    line: 'elasticsearch  -  nofile  65536'

- name: set ulimit nproc
  lineinfile:
    path: /etc/security/limits.conf
    line: 'elasticsearch  -  nproc  4096'

- name: add cluster name
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: 'cluster.name'
    line: "cluster.name: {{ elasticsearch_cluster_name }}"
    insertafter: "^#cluster.name:"
  when: elasticsearch_cluster_name is defined

- name: add node name
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: 'node.name'
    line: "node.name: {{ elasticsearch_node_name }}"
    insertafter: "^#node.name:"
  when: elasticsearch_node_name is defined

- name: bind to ip
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: 'network.host'
    line: "network.host: {{ elasticsearch_network_host }}"
    insertafter: "^#network.host:"
  when: elasticsearch_network_host is defined

- name: set discovery.seed_hosts
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^discovery.seed_hosts:'
    line: "discovery.seed_hosts: {{ elasticsearch_discovery_seed_hosts }}"
    insertafter: "^#discovery.seed_hosts"
  when: elasticsearch_discovery_seed_hosts is defined

- name: set cluster.initial_master_nodes
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    regexp: '^cluster.initial_master_nodes:'
    line: "cluster.initial_master_nodes: {{ elasticsearch_cluster_initial_master_nodes }}"
    insertafter: "^#cluster.initial_master_nodes"
  when: elasticsearch_cluster_initial_master_nodes is defined

- name: set node.master
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    line: "node.master: {{ elasticsearch_node_master }}"
  when: elasticsearch_node_master is defined

- name: set node.data
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    line: "node.data: {{ elasticsearch_node_data }}"
  when: elasticsearch_node_data is defined

- name: set node.ingest
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    line: "node.ingest: {{ elasticsearch_node_ingest }}"
  when: elasticsearch_node_ingest is defined
  
- name: set node.ml
  lineinfile:
    path: /etc/elasticsearch/elasticsearch.yml
    line: "node.ml: {{ elasticsearch_node_ml }}"
  when: elasticsearch_node_ml is defined

- name: just force systemd to reread configs
  systemd:
    daemon_reload: yes

- name: start elasticsearch
  systemd:
    name: "elasticsearch"
    state: started
    enabled: yes

...
